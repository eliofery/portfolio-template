{
  "items": [
    {
      "title": "Как создать красивую анимацию через css стили и",
      "desc": "Это по-прежнему помогает в нашем поиске, но «an» гораздо ближе к случайной ошибке в написании «Angela» или «Andy», чем к «Ryan» или «Stanley». Включая больше букв для сравнения, вы увеличиваете вероятность установления совпадения, которое в определенный момент может оказаться контрпродуктивным. Сравните результаты выше с результатами ниже, когда мы используем только первые три буквы ввода и имени персонажа.",
      "link": "#animation"
    },
    {
      "title": "Как еще можно Larry",
      "desc": "Хотя это может показаться хорошей идеей, в определенный момент поиск с помощью помощника начнет работать против самого себя, завышая результаты. См. ниже.",
      "link": "#more"
    },
    {
      "title": "Что будет если",
      "desc": "Как видите, эти результаты поиска намного точнее. Мы сократили наши результаты поиска на 50%, и, если учесть, насколько мал наш список, это может серьезно повлиять на размер результатов поиска, если список будет намного больше.",
      "link": "#"
    },
    {
      "title": "Анимация в стилях",
      "desc": "Эта функция разделяет наш пользовательский ввод, перебирает символы и использует интерполяцию строк, чтобы добавить каждую букву в регулярное выражение (?=.*) после звездочки",
      "link": "#style"
    },{
      "title": "Как создать красивую анимацию через css стили и2",
      "desc": "Это по-прежнему помогает в нашем поиске, но «an» гораздо ближе к случайной ошибке в написании «Angela» или «Andy», чем к «Ryan» или «Stanley». Включая больше букв для сравнения, вы увеличиваете вероятность установления совпадения, которое в определенный момент может оказаться контрпродуктивным. Сравните результаты выше с результатами ниже, когда мы используем только первые три буквы ввода и имени персонажа.",
      "link": "#animation"
    },
    {
      "title": "Как еще можно Larry2",
      "desc": "Хотя это может показаться хорошей идеей, в определенный момент поиск с помощью помощника начнет работать против самого себя, завышая результаты. См. ниже.",
      "link": "#more"
    },
    {
      "title": "Что будет если2",
      "desc": "Как видите, эти результаты поиска намного точнее. Мы сократили наши результаты поиска на 50%, и, если учесть, насколько мал наш список, это может серьезно повлиять на размер результатов поиска, если список будет намного больше.",
      "link": "#"
    },
    {
      "title": "Анимация в стилях2",
      "desc": "Эта функция разделяет наш пользовательский ввод, перебирает символы и использует интерполяцию строк, чтобы добавить каждую букву в регулярное выражение (?=.*) после звездочки",
      "link": "#style"
    },
    {
      "title": "Переменные глобального назначения2",
      "desc": "Если пользователь пытается найти «Келли», но по ошибке вводит «е» в качестве первой буквы. x.toLowerCase().includes(str) будет работать, но если пользователь продолжит печатать и введет «k», предыдущая проверка не сработает.",
      "link": "#global"
    }
  ]
}
